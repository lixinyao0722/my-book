{"./":{"url":"./","title":"简介","keywords":"","body":"简介简介 我的git book，记录一些常用资料备忘。 "},"gitbook/gitbook-store.html":{"url":"gitbook/gitbook-store.html","title":"Git Book知识储备","keywords":"","body":"Git Book知识储备Git Book知识储备 "},"gitbook/git-book-basic.html":{"url":"gitbook/git-book-basic.html","title":"Git Book基本使用","keywords":"","body":"Git Book基本使用创建git book流程参考Git Book基本使用 创建git book流程 1 在Github上创建一个新仓库，这个仓库就是用来存放git book文件。 2 git clone项目到本地，同时创建gh-pages分支。 # 克隆代码到本地 git clone https://github.com/lixinyao0722/my-book # 创建gh-pages分支 git branch gh-pages # 切换分支 git checkout gh-pages # 将分支关联远程仓库，并发布 git push --set-upstream origin gh-pages 第一次创建分支push到远程时，需要添加--set-upstream参数设置远程的跟踪分支。 主要使用两个分支master分支：存放xxx.md等源码文件。gh-pages分支：存放通过gitbook生成的静态页面文件，同时该分支支持 {username}.github.io域名的访问。 3 安装gitbook命令行工具，gitbook-cli根据xxx.md源文件生成html文件或其他pdf格式等。 npm i -g gitbook-cli 4 安装gh-pages命令行工具，可以快速将某个目录直接发布到远程gh-pages分支上。 npm i -g gh-pages 5 在my-book目录下，需创建两个基本文件。 SUMMARY.md 特殊导航文件README.md 创建方式：5.1 手动创建5.2 gitbook cli创建 gitbook init 6 在master分支上md文件编写完毕后，可在本地启动临时服务器查看效果。 # 不加调试参数容易出现各种error gitbook serve . # 加上参数大大降低gitbook命令出错率 gitbook serve . --log=debug --debug 查看地址：http://localhost:4000 7 确认无误后，通过gitbook build生成html文件 # gitbook build {源文件夹} {目标文件夹} gitbook build . dist 8 通过gh-pages命令行将目标文件夹发布远程仓库 gh-pages -d dist dist/xxx 目录文件对应发布至 -> https://github.com/lixinyao0722/my-book/xxx 9 在线查看效果，地址http://lixinyao0722.github.io/my-book/index.html 参考 Gitbook命令行速览 gitbook入门教程.pdf "},"gitbook/book.json.html":{"url":"gitbook/book.json.html","title":"Git Book配置文件","keywords":"","body":"Git Book配置文件Git Book配置文件 在SUMMARY.md和README.md同级目录下，创建名为book.json的配置文件，该文件会被gitbook读取。 文件格式json，样例book.json如下。 { \"language\": \"zh-hans\", \"description\": \"This is such a great book!\", \"title\": \"Weber学习指南\", \"plugins\": [ \"anchor-navigation-ex\", \"expandable-chapters\", \"splitter\", \"edit-link\", \"prism\", \"prism-themes\", \"-highlight\", \"search-plus\", \"-lunr\", \"-search\", \"advanced-emoji\" ], \"pluginsConfig\": { \"prism\": { \"css\": [ \"prism-themes/themes/prism-xonokai.css\" ] }, \"anchor-navigation-ex\": { \"showLevel\": false, \"mode\": \"float\", \"float\": { \"showLevelIcon\": false, \"level1Icon\": \"fa fa-hand-o-right\", \"level2Icon\": \"fa fa-hand-o-right\", \"level3Icon\": \"fa fa-hand-o-right\" } }, \"edit-link\": { \"base\": \"https://github.com/lixinyao0722/my-book/blob/master\", \"label\": \"编辑本页\" } } } 字段 说明 author 作者 language 生成语言，默认en，zh-hans为简体中文 gitbook 检查gitbook版本是否满足要求 description 定义了书本的描述，默认是从 README（第一段）中提取的 title 生成静态html时网站的title，会显示在chrome的tab标签页上 plugins 应用插件列表。如：expandable-chapters支持左侧导航栏折叠 "},"gitbook/plugin.html":{"url":"gitbook/plugin.html","title":"Git Book插件","keywords":"","body":"Git Book插件插件使用方法默认带有的5个插件常用插件book.json参考Git Book插件 Git Book插件用于增强gitbook命令生成目标产物时能力。 插件使用方法 1.在book.json文件中添加配置项。若插件有额外配置，可另添加pluginsConfig。 { \"plugins\": [ \"expandable-chapters\", \"anchor-navigation-ex\" ], \"pluginsConfig\": { \"anchor-navigation-ex\": { \"showLevel\": false, \"mode\": \"float\", \"float\": { \"showLevelIcon\": false, \"level1Icon\": \"fa fa-hand-o-right\", \"level2Icon\": \"fa fa-hand-o-right\", \"level3Icon\": \"fa fa-hand-o-right\" } } } } 2.安装插件包，其实际是node_modules模块，两种方式如下。 gitbook install npm i gitbook-plugin-expandable-chapters --save 默认带有的5个插件 名称 功能 highlight 代码高亮 search 导航栏搜索功能 sharing 右上角分享功能 font-settings 字体设置面板 livereload 暂时未知 如果需要取消默认插件，方式如下。 { \"plugins\": [ \"-font-settings\" ] } 常用插件 book.json { \"plugins\": [ \"anchor-navigation-ex\", \"expandable-chapters\", \"splitter\", \"edit-link\", \"prism\", \"prism-themes\", \"-highlight\", \"search-plus\", \"-lunr\", \"-search\", \"advanced-emoji\" ], \"pluginsConfig\": { \"prism\": { \"css\": [ \"prism-themes/themes/prism-xonokai.css\" ] }, \"anchor-navigation-ex\": { \"showLevel\": false, \"mode\": \"float\", \"float\": { \"showLevelIcon\": false, \"level1Icon\": \"fa fa-hand-o-right\", \"level2Icon\": \"fa fa-hand-o-right\", \"level3Icon\": \"fa fa-hand-o-right\" } }, \"edit-link\": { \"base\": \"https://github.com/lixinyao0722/my-book/blob/master\", \"label\": \"编辑本页\" } } } expandable-chapters支持左侧导航栏折叠，配合SUMMARY.md一起使用。 anchor-navigation-ex添加Toc到侧边悬浮导航以及回到顶部按钮，配置参数点击 此处。 splitter使侧边栏的宽度可以自由调节 edit-link页面顶部出现编辑当前页面按钮 prism取代gitbook默认提供的代码高亮功能，使用方法如下。 { \"plugins\": [ \"prism\", \"prism-themes\", \"-highlight\" ] } search-plus左侧导航栏上的搜索框，支持全局模糊搜索中文，使用方法。 { \"plugins\": [ \"search-plus\", \"-lunr\", \"-search\" ] } advanced-emoji支持emoji图标，使用方式如:kissing_heart: ，更多图标大全请点击 此处 。 参考 https://www.npmjs.com/package/gitbook-plugin-toc GitBook 插件 https://zq99299.gitbooks.io/gitbook-guide/content/chapter/plugin.html "},"gitbook/fix_gitbook_compile.html":{"url":"gitbook/fix_gitbook_compile.html","title":"解决gitbook编译命令错误","keywords":"","body":"解决gitbook编译命令错误问题描述解决方法参考解决gitbook编译命令错误 问题描述 使用gitbook serve .或gitbook build . dist编译命令时，经常出现如下错误。 解决方法 修改文件copyPluginAssets.js 参考 gitbook/issues/1309 "},"github/github.html":{"url":"github/github.html","title":"Github相关","keywords":"","body":"Github相关Github相关 "},"github/github-static-domain.html":{"url":"github/github-static-domain.html","title":"Github静态域名","keywords":"","body":"Github静态域名1 创建和使用2 gh-pages与域名的关系Github静态域名 1 创建和使用 为了能够在github上发布静态网页，需要创建一个特殊的仓库。其名字为 {username}.github.io 我的是：lixinyao0722.github.io 创建该仓库之后，github便为你分配了域名lixinyao0722.github.io。在该仓库放置静态html文件，可通过域名进行访问。 例如 仓库文件概况 浏览器访问方式 2 gh-pages与域名的关系 任何一个项目，都可以创建特殊分支gh-pages，该分支上的静态页面也能通过上述域名访问。 仓库名称：my-book分支：gh-pages页面：index.html访问地址：https://lixinyao0722.github.io/my-book/index.html "},"umall/umall.html":{"url":"umall/umall.html","title":"鹅漫","keywords":"","body":"鹅漫鹅漫 "},"umall/umall-web.html":{"url":"umall/umall-web.html","title":"鹅漫商城","keywords":"","body":"鹅漫商城鹅漫商城 "},"umall/umall-admin.html":{"url":"umall/umall-admin.html","title":"鹅漫后台管理系统","keywords":"","body":"鹅漫后台管理系统鹅漫后台管理系统 "},"phpstorm/phpstorm.html":{"url":"phpstorm/phpstorm.html","title":"PhpStorm","keywords":"","body":"PhpStorm相关PhpStorm相关 "},"phpstorm/plugins/plugins.html":{"url":"phpstorm/plugins/plugins.html","title":"PhpStorm插件","keywords":"","body":"PhpStorm插件PhpStorm插件 "},"phpstorm/plugins/markdown-navigator.html":{"url":"phpstorm/plugins/markdown-navigator.html","title":"破解Markdown-Navigator","keywords":"","body":"破解Markdown-Navigator简介问题破解方案参考破解Markdown-Navigator 简介 Markdown-Navigator可谓是PhpStrom内置markdown插件的升级版，支持更多工具快捷方式和功能点，如： 加强版工具栏 粗体 斜体 删除线 行内代码高亮 插入链接 有序无序列表 任务列表 插入表格，插入删除行、列 格式化表格 格式换文档 问题 默认下载版本是付费的，作为一个普通码农> 破解方案 1.到此处下载两个class文件。 LicenseAgent.classLicenseRequest.class 2.找到Markdown-Navigator安装目录下的idea-multimarkdown.jar。 C:/Users/{username}/.PhpStorm2018.1/config/plugins/idea-multimarkdown/lib 3.用压缩软件不解压打开jar包，替换上面两个class文件。 4.重启PhpStorm即可，此时Markdown-Navigator插件已破解，所有功能开启。 参考 CrazyBunQnQ/multimarkdown "},"vpn/vpn.html":{"url":"vpn/vpn.html","title":"VPN科学上网","keywords":"","body":"VPN科学上网本地搭建代理服务器方式参考VPN科学上网 本地搭建代理服务器方式 下载并解压Agent0.zip。 启动goproxy.exe，即在本地127.0.0.1:8087端口搭建了代理服务器。 请求转发到本地8087端口即可。 参考 Chrome一键翻墙包 "}}